---
import { getCollection } from 'astro:content';
import Layout from '../components/layout.astro';
import { IconList } from '../components/factories.tsx';
import { faBowlRice, faClock, faSprout, faStar } from '@fortawesome/free-solid-svg-icons';
import { components } from '../components/blog.tsx';
import '../sass/recipe.scss';

export const prerender = true;
export async function getStaticPaths() {
  const entries = await getCollection('recipes');
  return entries.map(entry => ({
    params: { recipe: 'recipes/' + entry.slug },
    props: { entry },
  }));
}
const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout
  title={entry.data.title}
  description={entry.data.description}
  currPage={''}
  customPages={[{ name: 'recipes', url: '/recipes' }]}
>
  <h1 class="recipe-title">{entry.data.title}</h1>
  <h3 class="recipe-description">{entry.data.description}</h3>
  <h5 class="recipe-modifiers">
    <IconList icon={faStar} count={entry.data.rating} className="star" />
    {
      entry.data.veg == 1 && (
        <span class="veg">
          {entry.data.rating > 0 && '//'} <IconList icon={faSprout} count={1} className={'sprout'} /> vegetarian
        </span>
      )
    }
    {
      entry.data.veg == 2 && (
        <span class="vegan">
          {entry.data.rating > 0 && '//'} <IconList icon={faSprout} count={1} className={'sprout'} /> vegan
        </span>
      )
    }
    <span
      >// {(<IconList icon={faClock} count={1} className={entry.data.time <= 15 ? 'clock' : ''} />)}
      {entry.data.time}min</span
    >
    {
      entry.data.asian && (
        <span>
          {' '}
          // <IconList icon={faBowlRice} count={entry.data.asian ? 1 : 0} className="" /> needs asian ingredients
        </span>
      )
    }
  </h5>
  <Content components={components} />
</Layout>
