/* ===================================
A collection of helpful Sass mixins.
Created by Ben Cuan with contributions
from various sources cited below.
====================================== */
@use '_colors';

/**
 * Rem units with px fallback from https://w3bits.com/rem-fallback/
 * $size: Font-size to be converted from `px` to `rem`
 * $base: Base font-size (Change its value as per your need)
 * @return void
 */
@mixin font-size($size, $base: 16) {
  font-size: $size; // fallback for old browsers
  font-size: ($size / $base) * 1rem;
}

/**
 * Easy media queries from https://w3bits.com/sass-mixins/
 * Usage: @include screen('tablet'/'desktop'/'mobile')
 * $size: one of three strings: desktop, tablet, or mobile
 */
@mixin screen($size) {
  $desktop: "(min-width: 1366px)";
  $tablet: "(min-width: 768px) and (max-width: 1365px)";
  $mobile: "(max-width: 767px)";

  @if $size==desktop {
    @media only screen and #{$desktop} {
      @content;
    }
  }

  @else if $size==tablet {
    @media only screen and #{$tablet} {
      @content;
    }
  }

  @else if $size==mobile {
    @media only screen and #{$mobile} {
      @content;
    }
  }

  @else {
    @media only screen and #{$size} {
      @content;
    }
  }
}

/**
 * Vendor prefixing for keyframes from https://w3bits.com/sass-mixins/
 * Usage: @include keyframes(anim) {
 *   50% { ... }
 *   100% { ... }
 * }
 * $name: The name of the animation.
 */
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }

  @-moz-keyframes #{$name} {
    @content;
  }

  @keyframes #{$name} {
    @content;
  }
}

// From https://medium.com/the-missing-bit/mitigating-css-gradient-banding-45b88493d228
@mixin stepped-radial-gradient($bg1, $bg2) {
  $g: $bg1;
  $steps: 1;

  @for $i from 1 to $steps {
    $g: append($g, fade-out($bg2, 1 / $i) percentage($i / $steps), comma);
    $g: append($g, fade-out($bg2, 1 / $i) percentage(($i + 0.6) / $steps), comma);
  }

  $g: append($g, $bg2);
  background: radial-gradient(circle, $g);
}

// From https://css-tricks.com/snippets/sass/centering-mixin/
// Usage: @include center;
@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/*
  Have different font sizes for each screen size.
  $phone is the font size for phones, and so on.
*/
@mixin responsive-text($phone, $tablet, $computer) {
  @include screen('mobile') {
    @include font-size($phone);
  }

  @include screen('desktop') {
    @include font-size($computer);
  }

  @include screen('tablet') {
    @include font-size($tablet);
  }
}


@mixin gradient-border($border-width) {
  &::after {
    position: absolute;
    content: "";
    top: calc(-1 * #{$border-width});
    left: calc(-1 * #{$border-width});
    z-index: -1;
    width: calc(100% + #{$border-width} * 2);
    height: calc(100% + #{$border-width} * 2);
    background: linear-gradient(60deg,
        colors.$highlight, colors.$accent);
    background-size: 300% 300%;
    background-position: 0 50%;
    border-radius: calc(2 * #{$border-width});
  }

  &:hover {
    &::after {
      background: linear-gradient(60deg,
          colors.$highlight, colors.$accent);
      background-size: 300% 300%;
      background-position: 0 50%;
      animation: text-animation 2s infinite;
    }
  }
}

@mixin gradient-button($border-width, $border-radius) {

  border-radius: $border-radius;

  &::after {
    position: absolute;
    content: "";
    top: calc(-1 * #{$border-width});
    left: calc(-1 * #{$border-width});
    // z-index: -1;
    width: calc(100% + #{$border-width} * 2);
    height: calc(100% + #{$border-width} * 2);
    background: linear-gradient(60deg,
        colors.$highlight, colors.$accent);
    background-size: 300% 300%;
    background-position: 0 50%;
    border-radius: $border-radius;
  }

  &:hover {
    border: 3px transparent;
    &::after {
      background: linear-gradient(60deg,
          colors.$highlight, colors.$accent);
      background-size: 300% 300%;
      background-position: 0 50%;
      animation: text-animation 2s infinite;
    }
    .content {
      background: transparent;
    }
  }

  .content {
    background: colors.$bg;
    position: relative;
    z-index: 100;
    border-radius: $border-radius;
    padding: 0 3rem;
    text-align: center;
    left: 0;
    color: white;
    transition: all 0.5s;
  }
}
